
@model  LottoGistAdmin.DataAccess.RemoteModel.GameScheduleItemObj
@{
    Layout = null;
    var error = ViewBag.Error as string;
    var hasError = !string.IsNullOrEmpty(error);
}

<div class="modal-dialog">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h2> <b>MODIFY SCHEDULE</b></h2>
        </div>

        <div class="panel-body">
            @if (hasError)
            {
                <div class="bs-callout bs-callout-danger" id="customError">
                    <h4>Error!</h4>
                    <p>@Html.Raw(error)</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            }
            else
            {
                using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmEditGameSchedule", data_parsley_validate = "" }))
                {
                    @Html.Hidden("GameScheduleId", Model.GameScheduleId)
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div id="dvError"></div>
                        <div class="form-group">
                            <b>SCHEDULE ORDER</b>
                            <input type="text" class="form-control " value="@Model.ScheduleOrder" id="ScheduleOrder" name="ScheduleOrder" required="" data-parsley-required-message="Schedule Order is required">
                        </div>
                        <div class="form-group">
                            <b>GAME DAY</b>
                            @Html.DropDownListFor(x => x.GameDay, new SelectList(ViewBag.weekDaysLookup, "Id", "Name", Model.GameDay), "-- Please select --", new { @id = "gameDayId", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <b>SCHEDULE TIME</b>
                            <div class='input-group date' id='scheduleTime'>
                                @Html.TextBoxFor(model => model.ScheduleTime, new { @class = "form-control" })
                                <span class="input-group-addon">
                                    <span class="fa fa-calendar"></span>
                                </span>
                            </div>
                        </div>
                        <div class="form-group">
                            <b>OPERATOR</b>
                            @Html.DropDownListFor(x => x.OperatorId, new SelectList(Model.AllOperators, "Id", "Name", Model.OperatorId), "-- Please select --", new { @id = "operatorId", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <b>GAME</b>
                            @Html.DropDownListFor(x => x.GameId, new SelectList(Model.AllGames, "Id", "Name", Model.GameId), "-- Please select --", new { @id = "gameId", @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <b>STATUS</b>
                            @Html.CheckBox("StatusVal", Model.StatusVal, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal"> <i class="fa fa-remove"></i> Close </button>
                            <button type="submit" class="btn btn-success" id="btnUpdate"> <i class="fa fa-check"></i>Update</button>
                        </div>
                    </div>
                }

            }

        </div>
    </div>
</div>

@*<script src="~/scripts/jquery-3.1.1.min.js"></script>*@
<script>
        $(document).ready(function() {
            $('#scheduleTime').datetimepicker({
                format: 'LT'
                //autoclose: true   
            });

            $('#operatorId').change(function () {

                $('#gameId').empty();

                if ($('#operatorId').val() != null) {

                    $.ajax({
                        type: "POST",
                        url: "/GameSchedule/GetGamesByOperatorId",
                        data: JSON.stringify({ operatorId: $('#operatorId').val() }),
                        contentType: "application/json; charset=utf-8",

                        success: function (data) {
                            $('#gameId').append('<option value="">--Please select--</option>');
                            $.each(data.Games,
                                function (index, value) {
                                    $('#gameId').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                                });
                        }
                    });
                }
            });
            //$('#operatorId').change(function() {

            //    $('#gameId').empty();

            //    if ($('#operatorId').val() != null) {

            //        $.ajax({
            //            type: "POST",
            //            url: "/GameSchedule/GetGamesByOperatorId",
            //            data: JSON.stringify({ operatorId: $('#operatorId').val() }),
            //            contentType: "application/json; charset=utf-8",

            //            success: function(data) {
            //                $.each(data.Games,
            //                    function(index, value) {
            //                        $('#gameId').append('<option value="' + value.Id + '">' + value.Name + '</option>');
            //                    });
            //            }
            //        });
            //    }

            //});

            $('#frmEditGameSchedule').parsley().on('field:validated',
                function() {
                    var ok = $('.parsley-error').length === 0;
                    $('.bs-callout-info').toggleClass('hidden', !ok);
                    $('.bs-callout-danger').toggleClass('hidden', ok);
                }).on('form:submit',
                function() {
                    ClearInlineError("dvError");

                    if ($('#gameId').val() === null ||
                        $('#gameId').val() === "" ||
                        parseInt($('#gameId').val()) === 0) {

                        InlineErrorMessage("Please select a Game!", "dvError");
                        return false;
                    }

                    if ($('#gameDayId').val() === null ||
                        $('#gameDayId').val() === "" ||
                        parseInt($('#gameDayId').val()) === 0) {

                        InlineErrorMessage("Please select a Game!", "dvError");
                        return false;
                    }

                    var frm = $("#frmEditGameSchedule");
                    if (!frm.valid()) {
                        InlineErrorMessage("Validation Error! Please check all fields", "dvError");
                        return false;
                    }
                    var param = frm.serializeArray();

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ProcessUpdateRequest", "GameSchedule")',
                        data: param,
                        success: function(data) {
                            if (!data.IsAuthenticated) {
                                window.location.href = "/Login";
                                return;
                            }
                            if (!data.IsSuccessful) {
                                InlineErrorMessage(
                                    data.Error ? data.Error : "Unknow error occured. Please try again later!",
                                    "dvError");
                                swal({
                                        title: "",
                                        text: data.Error ? data.Error : "Unknow error occured. Please try again later!",
                                        type: "error",
                                        showCancelButton: false,
                                        confirmButtonText: "Close",
                                        closeOnConfirm: true,
                                    },
                                    function(isConfirm) {
                                        if (isConfirm) {

                                        }
                                    });

                            } else {
                                $('#dvModal').modal('hide');
                                swal({
                                        title: "",
                                        text: "Game Schedule was modified successfully",
                                        type: "success",
                                        showCancelButton: false,
                                        confirmButtonText: "Ok",
                                        closeOnConfirm: false,
                                    },
                                    function(isConfirm) {
                                        if (isConfirm) {
                                            window.location.reload();
                                        }
                                    });
                            }
                        },
                        complete: function() {
                            $(".loader").hide();
                            $("#loadingMessage").html("");
                        }
                    });
                    return false;
                });
        });
</script>







