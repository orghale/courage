
@using XPLUG.WEBTOOLKIT
@model  LottoGistAdmin.Models.Portal.PortalUserViewModel
@{
    Layout = null;
    var error = ViewBag.Error as string;
    var hasError = !string.IsNullOrEmpty(error);
}

<div class="modal-dialog" style="width: 35%">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h2> Update Portal User</h2>
        </div>


        <div class="panel-body">
            @if (hasError)
            {
                <div class="bs-callout bs-callout-danger" id="customError">
                    <h4>Error!</h4>
                    <p>@Html.Raw(error)</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            }
            else
            {
                using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmAddUser", data_parsley_validate = "" }))
                {

                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div id="dvError"></div>
                        @Html.Hidden("UserId", Model.UserId)
                       <div class="form-group">
                           Full Name
                            <input type="text" class="form-control " value="@Model.Fullname" id="Fullname" name="Fullname" required="" data-parsley-required-message="Full name is required">
                        </div>
                        <div class="form-group">
                            Email
                            <input type="text" class="form-control " value="@Model.Email" id="Email" name="Email">
                        </div>
                        <div class="form-group">
                            Username
                            @Html.TextBox("Username", Model.Username, new { @readonly = "readonly", @class = "form-control" })
                         </div>
                        <div class="form-group">
                            User Roles
                            @Html.CheckBoxListFor("MyRoleIds", @Html.GetTabRoleListByIds(model => model.MyRoleIds, Model.AllRoles, false, Model.UserId == 1), 3, RepeatedDirection.Horizontal)
                        </div>
                        <div class="form-group">
                            Status
                            @Html.CheckBox("IsApproved", Model.IsApproved, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-success" id="btnUpdate">Update User</button>
                        </div>

                    </div>
                }


            }

        </div>

    </div>
</div>
<script>
    $(document).ready(function () {

        $('#frmAddUser').parsley().on('field:validated', function() {
            var ok = $('.parsley-error').length === 0;
            $('.bs-callout-info').toggleClass('hidden', !ok);
            $('.bs-callout-danger').toggleClass('hidden', ok);
        }).on('form:submit', function () {
            ClearInlineError("dvError");


            var frm = $("#frmAddUser");

            if (frm == null) {
                InlineErrorMessage("Invalid User Information", "dvError");
                return false;
            }


            if (!frm.valid()) {
                InlineErrorMessage("Validation Error! Please check all fields", "dvError");
                return false;
            }

            var params = frm.serializeArray();

            
            $.ajax({
                type: "POST",
                url: '@Url.Action("ProcessEditUserRequest", "PortalUser")',
                data: params,
                success: function (data) {
                    if (!data.IsAuthenticated) {
                        window.location.href = "/Login";
                        return;
                    }
                    if (!data.IsSuccessful) {
                        InlineErrorMessage(data.Error ? data.Error : "Unknown error occured. Please try again later!", "dvError");
                       swal({
                            title: "",
                            text: data.Error ? data.Error : "Unknown error occured. Please try again later!",
                            type: "error",
                            showCancelButton: false,
                            confirmButtonText: "Close",
                            closeOnConfirm: true,
                        }, function (isConfirm) {
                            if (isConfirm) {

                            }
                        });

                    } else {
                        $('#dvModal').modal('hide');
                        swal({
                            title: "",
                            text: "User was updated successfully",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonText: "Ok",
                            closeOnConfirm: false,
                        }, function (isConfirm) {
                            if (isConfirm) {
                               window.location.reload();
                            }
                        });
                    }
                },
                complete: function () {
                    $(".loader").hide();
                    $("#loadingMessage").html("");
                }
            });
            return false;
        });



    });


</script>









